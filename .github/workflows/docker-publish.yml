name: Docker Publish

on:
  push:
    branches:
      - master  # Trigger workflow on push to master branch
    tags:
      - 'v*'    # Trigger workflow on version tag push (e.g., v1.2.3)

jobs:

  build:

    name: Build Images

    permissions:
      contents: read
      packages: write  # Required to push images to GitHub Container Registry (GHCR)

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            arch: arm64
            platform: linux/arm64

    runs-on: ${{ matrix.os }}

    steps:

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          # Save platform pair (e.g., linux-amd64) to env
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set short git commit SHA
        id: appvars
        run: |
          calculatedSha=$(git rev-parse --short HEAD)
          branchName=$(git rev-parse --abbrev-ref HEAD)
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          echo "COMMIT_BRANCH=$branchName" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend by digest
        id: build-backend
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          # Push image by digest only; manifest list will be created later
          outputs: type=image,"name=ghcr.io/poliroid/rybbit-backend",push-by-digest=true,name-canonical=true,push=true

      - name: Build and push client by digest
        id: build-client
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          # Push image by digest only; manifest list will be created later
          outputs: type=image,"name=ghcr.io/poliroid/rybbit-client",push-by-digest=true,name-canonical=true,push=true


      - name: Export digests
        run: |
          mkdir -p /tmp/digests
          backend_digest="${{ steps.build-backend.outputs.digest }}"
          client_digest="${{ steps.build-client.outputs.digest }}"
          touch "/tmp/digests/${backend_digest#sha256:}"
          touch "/tmp/digests/${client_digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:

    name: Merge Images and Push

    runs-on: ubuntu-latest

    needs:
      - build  # Wait for all platforms to be built

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true  # Merge all platform digests into one folder

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/poliroid/rybbit-backend
            ghcr.io/poliroid/rybbit-client
          tags: |
            # Add 'latest' tag only if this is a version tag (e.g. v1.2.3)
            ${{ startsWith(github.ref, 'refs/tags/v') && 'type=raw,value=latest,priority=901' || '' }}
            
            # Add the version tag itself (e.g. v1.2.3)
            ${{ startsWith(github.ref, 'refs/tags/v') && format('type=raw,value={0},priority=900', github.ref_name) || '' }}
            
            # Always add 'edge' tag for build on latest commit indicator
            type=edge
            
            # Always add short SHA tag for traceability
            type=sha

      - name: Create manifest lists and push images
        working-directory: /tmp/digests
        run: |
          for component in backend client; do
            docker buildx imagetools create \
              $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
              $(printf 'ghcr.io/poliroid/rybbit-%s@sha256:%s ' "$component" ${component}-*)
          done

      - name: Inspect images
        run: |
          for component in backend client; do
            echo "Inspecting $component..."
            docker buildx imagetools inspect ghcr.io/poliroid/rybbit-${component}:${{ steps.meta.outputs.version }}
          done
